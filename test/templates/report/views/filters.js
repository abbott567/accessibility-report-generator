/* global describe, it */

const { expect } = require('chai')
const cheerio = require('cheerio')
const datefns = require('date-fns')
const path = require('path')

describe('View: Filters', () => {
  it('should render: pages/filters/no-plans-for-compliance', () => {
    const date = datefns.format(new Date(), 'd MMMM yyyy')
    const getHTML = require(path.resolve('src', 'templates', 'report', 'pages', 'filters', 'no-plans-for-compliance', 'build-html'))
    const HTML = getHTML()
    const $ = cheerio.load(HTML)
    const title = $('title').text()
    expect(title).to.eql(`No plans for compliance - Test Organisation Accessibility Report - ${date}`)
  })

  it('should render: pages/filters/compliant-services', () => {
    const date = datefns.format(new Date(), 'd MMMM yyyy')
    const getHTML = require(path.resolve('src', 'templates', 'report', 'pages', 'filters', 'compliant-services', 'build-html'))
    const HTML = getHTML('compliant')
    const $ = cheerio.load(HTML)
    const title = $('title').text()
    expect(title).to.eql(`Compliant services - Test Organisation Accessibility Report - ${date}`)
  })
  it('should render: pages/filters/very-high-risk-services', () => {
    const date = datefns.format(new Date(), 'd MMMM yyyy')
    const getHTML = require(path.resolve('src', 'templates', 'report', 'pages', 'filters', 'very-high-risk-services', 'build-html'))
    const HTML = getHTML('very-high-risk')
    const $ = cheerio.load(HTML)
    const title = $('title').text()
    expect(title).to.eql(`Very high risk services - Test Organisation Accessibility Report - ${date}`)
  })
  it('should render: pages/filters/high-risk-services', () => {
    const date = datefns.format(new Date(), 'd MMMM yyyy')
    const getHTML = require(path.resolve('src', 'templates', 'report', 'pages', 'filters', 'high-risk-services', 'build-html'))
    const HTML = getHTML('high-risk')
    const $ = cheerio.load(HTML)
    const title = $('title').text()
    expect(title).to.eql(`High risk services - Test Organisation Accessibility Report - ${date}`)
  })
  it('should render: pages/filters/medium-risk-services', () => {
    const date = datefns.format(new Date(), 'd MMMM yyyy')
    const getHTML = require(path.resolve('src', 'templates', 'report', 'pages', 'filters', 'medium-risk-services', 'build-html'))
    const HTML = getHTML('medium')
    const $ = cheerio.load(HTML)
    const title = $('title').text()
    expect(title).to.eql(`Medium risk services - Test Organisation Accessibility Report - ${date}`)
  })
  it('should render: pages/filters/low-risk-services', () => {
    const date = datefns.format(new Date(), 'd MMMM yyyy')
    const getHTML = require(path.resolve('src', 'templates', 'report', 'pages', 'filters', 'low-risk-services', 'build-html'))
    const HTML = getHTML('low')
    const $ = cheerio.load(HTML)
    const title = $('title').text()
    expect(title).to.eql(`Low risk services - Test Organisation Accessibility Report - ${date}`)
  })
  it('should render: pages/filters/unknown-risk-services', () => {
    const date = datefns.format(new Date(), 'd MMMM yyyy')
    const getHTML = require(path.resolve('src', 'templates', 'report', 'pages', 'filters', 'unknown-risk-services', 'build-html'))
    const HTML = getHTML('unknown')
    const $ = cheerio.load(HTML)
    const title = $('title').text()
    expect(title).to.eql(`Unknown risk services - Test Organisation Accessibility Report - ${date}`)
  })

  it('should render: pages/filters/critical-services', () => {
    const date = datefns.format(new Date(), 'd MMMM yyyy')
    const getHTML = require(path.resolve('src', 'templates', 'report', 'pages', 'filters', 'critical-services', 'build-html'))
    const HTML = getHTML('critical')
    const $ = cheerio.load(HTML)
    const title = $('title').text()
    expect(title).to.eql(`Critical services - Test Organisation Accessibility Report - ${date}`)
  })
  it('should render: pages/filters/sunsetting-services', () => {
    const date = datefns.format(new Date(), 'd MMMM yyyy')
    const getHTML = require(path.resolve('src', 'templates', 'report', 'pages', 'filters', 'sunsetting-services', 'build-html'))
    const HTML = getHTML('sunsetting')
    const $ = cheerio.load(HTML)
    const title = $('title').text()
    expect(title).to.eql(`Sunsetting services - Test Organisation Accessibility Report - ${date}`)
  })
  it('should render: pages/filters/legacy-services', () => {
    const date = datefns.format(new Date(), 'd MMMM yyyy')
    const getHTML = require(path.resolve('src', 'templates', 'report', 'pages', 'filters', 'legacy-services', 'build-html'))
    const HTML = getHTML('legacy')
    const $ = cheerio.load(HTML)
    const title = $('title').text()
    expect(title).to.eql(`Legacy services - Test Organisation Accessibility Report - ${date}`)
  })

  it('should render: pages/filters/citizen-facing-services', () => {
    const date = datefns.format(new Date(), 'd MMMM yyyy')
    const getHTML = require(path.resolve('src', 'templates', 'report', 'pages', 'filters', 'citizen-facing-services', 'build-html'))
    const HTML = getHTML('citizen')
    const $ = cheerio.load(HTML)
    const title = $('title').text()
    expect(title).to.eql(`Citizen facing services - Test Organisation Accessibility Report - ${date}`)
  })
  it('should render: pages/filters/staff-facing-services', () => {
    const date = datefns.format(new Date(), 'd MMMM yyyy')
    const getHTML = require(path.resolve('src', 'templates', 'report', 'pages', 'filters', 'staff-facing-services', 'build-html'))
    const HTML = getHTML('staff')
    const $ = cheerio.load(HTML)
    const title = $('title').text()
    expect(title).to.eql(`Staff facing services - Test Organisation Accessibility Report - ${date}`)
  })
})
